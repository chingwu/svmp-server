# Example svmp-server configuration file

# External TCP port to listen on for client connections.
# default = 8080
port: 8080

################################################################################
# SSL/TLS configuration
################################################################################

# default = false
enable_ssl: false 

# SSL certificate and private key paths
# (required if tls_proxy == true)
#server_certificate: '../svmp-overseer/tls/server-cert.pem'
server_certificate: '/home/ilgwt/work_tmp_142/work_svmp/svmp_github/svmp-overseer/tls/server-cert.pem'
#private_key: '../svmp-overseer/tls/server-key.pem'
private_key: '/home/ilgwt/work_tmp_142/work_svmp/svmp_github/svmp-overseer/tls/server-key.pem'

# SSL private key password
# (if the server private key file is password protected)
private_key_pass: 'changeme_password'

# TLS CA Cert to validate user certs against
# only used if use_tls_user_auth == true
#ca_cert: '../svmp-overseer/tls/ca-cert.pem'
ca_cert: '/home/ilgwt/work_tmp_142/work_svmp/svmp_github/svmp-overseer/tls/ca-cert.pem'

################################################################################
# Authentication options
################################################################################

# Enable certificate-based user authentication
# default = false
#cert_user_auth: false

# Are we operating behind a reverse proxy that terminates SSL?
# Only has an effect when cert_user_auth is also true, in which case we expect
# the reverse proxy to inject special headers containing the data from the user
# certificate.
# default = false
#behind_reverse_proxy: false

################################################################################
# SVMP Overseer settings
################################################################################

# Base URL for the SVMP Overseer API used to facilitate user VM setup
overseer_url: 'http://140.96.28.142:3000/'

# Used to verify JSON Web Tokens presented by clients
# this is generated by the overseer, must be placed here manually
#overseer_cert: '../svmp-overseer/tls/overseer-cert.pem'
overseer_cert: '/home/ilgwt/work_tmp_142/work_svmp/svmp_github/svmp-overseer/tls/overseer-cert.pem'

# JSON web token to authenticate to the login server as an admin user.
# Generate and obtain this string from the overseer node.
# Manually genereated in overseer by node create-token.js -a svmp-server-1
#auth_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJzdm1wLXNlcnZlci0xIiwianRpIjoiNDAxNTEyZmYtM2QwOC00NDM4LTk2OTQtOWEzY2I5NzFkZGI4IiwiaXNzIjoiNTItMEE0MDQwNS0wMSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTQ1ODE3Njg0OH0'
#auth_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJzdm1wLXNlcnZlci0xIiwianRpIjoiNjZkZTM5YTgtOGJmNy00YWJiLWE4OTAtYjk4YzIxMTAyNTI3IiwiaXNzIjoiNTItMEE0MDQwNS0wMSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTQ1ODE4NDY1N30.hBldruO7QzrTJBbZh3QBhtR6q1ym0WxBT89bpHj80QdKBGkSQTNh1lWCrjSrv9f6nEJMCxSPrTjALV8FlxRTU7uHJw-6jKQsx4Im0-TQ4u0LAGjvggBv4uDiDbnoHipKShm47csNqvO1yZbjFuwQH6Q6z6Z3tV5ILR76cT7j_1KzdvfCOwXF7-gUY6a8q4N7SopAoV5y0D8QpOZKLyHSl8RWLKsdk_ulptgXraAQkum95jHDs0Av3Q_swue2qPmFcPkUGq7r9aS6hroJvpkdc2Ry-xsiEzA0jcLhKTfwgCTteUb8sVgQOeDYHPqGoaLIYy8UHAe7655ov9Oly2ySoQ'
auth_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJzdm1wLXNlcnZlci0xIiwianRpIjoiMjQ1Mjc4ZDMtMGUyOS00ZTNiLTg2OTQtYjIzNjEzNTExYjYyIiwiaXNzIjoiaWxnd3QtU3lzdGVtLVByb2R1Y3QtTmFtZSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTQ2MjI0MjQzNX0.W-3XwQKI1i7--TOopgZv_iVbnHF6Z6tvaSugaeeJ69ZHu7xfl3CG_Xct_bR69m_SQTAqin1KJap5l4wMabj6QyJayBJSwszEI1SPkAuWQFd4kxFtmYvNZkjEgfJmRO9Ld0b9DXEarXq8askMZc3mb0GjWw36dmjr39hC6QvsAoM'

################################################################################
# Logging options
################################################################################

# Log file path
log_file: 'proxy_log.txt'

# Log level to use, omits lower log levels
# Levels, lowest to highest: silly, debug, verbose, info, warn, error
# default = 'info'
log_level: 'silly'

# Protobuf request messages to filter out when using verbose logging
# default = ['SENSOREVENT', 'TOUCHEVENT']
#log_request_filter: ['SENSOREVENT', 'TOUCHEVENT']

################################################################################
# WebRTC settings for video and audio streaming to the client
################################################################################

webrtc:
    # Enter zero or more servers to use for in ICE negotiation for NAT traversal
    ice_servers:
        # Ex1: Unauthenticated STUN server
        - url: 'stun:<stun server ip>:3478'

        # Ex2: Password protected STUN server
        - url: 'stun:<stun server ip>:3478'
          password: 'stun-credential'

        # Ex3: TURN relay server (username & password required)
        - url: 'turn:<turn server ip>:3478'
          username: 'turn-user'
          password: 'turn-password'

    # WebRTC constraints and paramenters that are sent to the peers.
    # Don't change unless you know what you're doing.
    #video: { audio: true, video: { mandatory: {}, optional: [] } }
    #pc: { optional: [ {DtlsSrtpKeyAgreement: true} ] }
